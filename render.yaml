services:
  - type: web
    name: vestiventa
    env: ruby
    buildCommand: "./bin/render-build.sh"
    startCommand: "bundle exec puma -C config/puma.rb"
    envVars:
      - key: RAILS_ENV
        value: production
      - key: RAILS_SERVE_STATIC_FILES
        value: "true"
      - key: RAILS_MASTER_KEY
        sync: false  # Se configurará manualmente en el dashboard de Render
      - key: DATABASE_URL
        fromDatabase:
          name: vestiventa-db
          property: connectionString
    plan: free
    numInstances: 1
    regions:
      - sfo  # San Francisco (puedes cambiarlo a la región más cercana a ti)
    healthCheckPath: /up

  - type: worker
    name: vestiventa-worker
    env: ruby
    buildCommand: "./bin/render-build.sh"
    startCommand: "bundle exec sidekiq -C config/sidekiq.yml"
    envVars:
      - key: RAILS_ENV
        value: production
      - key: RAILS_MASTER_KEY
        sync: false  # Se configurará manualmente en el dashboard de Render
      - key: DATABASE_URL
        fromDatabase:
          name: vestiventa-db
          property: connectionString
    plan: free
    numInstances: 1

  - type: redis
    name: vestiventa-redis
    plan: free
    ipAllowList:
      - 0.0.0.0/0

  - type: postgres
    name: vestiventa-db
    plan: free
    databaseName: vestiventa_production
    user: vestiventa
    ipAllowList:
      - 0.0.0.0/0

# Configuración de variables de entorno globales
global:
  envVars:
    - key: RAILS_LOG_TO_STDOUT
      value: "true"
    - key: RAILS_ENV
      value: production
    - key: REDIS_URL
      fromService:
        type: redis
        name: vestiventa-redis
        property: connectionString