services:
  - type: web
    name: vestiventa
    env: ruby
    buildCommand: "./bin/render-build.sh"
    startCommand: "bundle exec puma -C config/puma.rb"
    envVars:
      - key: RAILS_ENV
        value: production
      - key: RAILS_SERVE_STATIC_FILES
        value: "true"
      - key: RAILS_LOG_TO_STDOUT
        value: "true"
      - key: RAILS_MASTER_KEY
        sync: false  # Configurar manualmente en el dashboard de Render
      - key: SECRET_KEY_BASE
        generateValue: true
      - key: DATABASE_URL
        fromDatabase:
          name: vestiventa-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: vestiventa-redis
          property: connectionString
    plan: free
    numInstances: 1
    regions:
      - sfo
    healthCheckPath: /up

  - type: worker
    name: vestiventa-worker
    env: ruby
    buildCommand: "./bin/render-build.sh"
    startCommand: "bundle exec sidekiq -C config/sidekiq.yml"
    envVars:
      - key: RAILS_ENV
        value: production
      - key: RAILS_MASTER_KEY
        sync: false
      - key: SECRET_KEY_BASE
        fromService:
          type: web
          name: vestiventa
          property: envVar
          envVarKey: SECRET_KEY_BASE
      - key: DATABASE_URL
        fromService:
          type: postgres
          name: vestiventa-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: vestiventa-redis
          property: connectionString
    plan: free
    numInstances: 1

  - type: redis
    name: vestiventa-redis
    plan: free
    ipAllowList:
      - 0.0.0.0/0

  - type: postgres
    name: vestiventa-db
    plan: free
    databaseName: vestiventa_production
    user: vestiventa
    ipAllowList:
      - 0.0.0.0/0